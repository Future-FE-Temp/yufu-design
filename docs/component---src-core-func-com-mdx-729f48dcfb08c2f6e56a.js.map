{"version":3,"sources":["webpack:///../src/core/FuncCom.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","FuncCom","__position","__code","__scope","Playground","Props","type","NoteButton","React","status","setStatus","color","onClick","style","backgroundColor","className","isMDXComponent"],"mappings":"+QAWaA,G,oBAAe,S,sMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,2BADR,2BAGA,kBACE,GAAM,YADR,YAGA,YAAC,IAAD,CAAOC,GAAIC,IAASF,QAAQ,UAC5B,kBACE,GAAM,QADR,QAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,wFAA2FC,SAAO,GACnIN,QACAH,kBACAU,eACAC,UACAL,aALmI,gBAMnIN,IANmI,EAOnIH,eAPmI,GAQlIO,QAAQ,cACb,YAAC,IAAD,CAASA,QAAQ,WAAjB,QACA,YAAC,IAAD,CAASQ,KAAK,QAAQR,QAAQ,WAA9B,QACA,YAAC,IAAQS,WAAT,OAEE,kBACE,GAAM,kBADR,kBAGA,YAAC,IAAD,CAAYN,WAAY,EAAGC,OAAQ,2dAA0eC,SAAO,GAClhBN,QACAH,kBACAU,eACAC,UACAL,aALkhB,gBAMlhBN,IANkhB,EAOlhBH,eAPkhB,GAQjhBO,QAAQ,eACZ,WAAM,MAC2BU,WAAe,WAApCC,EADN,KACcC,EADd,KAOD,IAAMC,EAAmB,YAAXF,EAAuB,UAAY,UACjD,OAAO,uBACP,YAAC,IAAD,CAASG,QANT,WACEF,EAAqB,YAAXD,EAAuB,QAAU,YAKZH,KAAMG,EAAQX,QAAQ,WAAvD,iBACA,mBAAKe,MAAO,CACRC,gBAAiBH,GAChBI,UAAU,iBAFf,2B,oMAYRpB,EAAWqB,gBAAiB","file":"component---src-core-func-com-mdx-729f48dcfb08c2f6e56a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/yufu-design/yufu-design/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { FuncCom } from '@yffed/core';\nimport './Button.less';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"function-component-test\"\n    }}>{`Function Component Test`}</h1>\n    <h2 {...{\n      \"id\": \"组件-props\"\n    }}>{`组件 Props`}</h2>\n    <Props of={FuncCom} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"基本使用\"\n    }}>{`基本使用`}</h2>\n    <Playground __position={1} __code={'<FuncCom>Open</FuncCom>\\n<FuncCom type=\\\"error\\\">Open</FuncCom>\\n<FuncCom.NoteButton />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      FuncCom,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <FuncCom mdxType=\"FuncCom\">Open</FuncCom>\n  <FuncCom type=\"error\" mdxType=\"FuncCom\">Open</FuncCom>\n  <FuncCom.NoteButton />\n    </Playground>\n    <h2 {...{\n      \"id\": \"复杂一点，带有状态管理的使用\"\n    }}>{`复杂一点，带有状态管理的使用`}</h2>\n    <Playground __position={2} __code={'() => {\\n  const [status, setStatus] = React.useState(\\'primary\\')\\n  function onButtonClick() {\\n    setStatus(status === \\'primary\\' ? \\'error\\' : \\'primary\\')\\n  }\\n  const color = status === \\'primary\\' ? \\'#5352ED\\' : \\'#FF4757\\'\\n  return (\\n    <div>\\n      <FuncCom onClick={onButtonClick} type={status}>\\n        change Status\\n      </FuncCom>\\n      <div style={{ backgroundColor: color }} className=\\\"button-status\\\">\\n        button status\\n      </div>\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      FuncCom,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [status, setStatus] = React.useState('primary');\n\n        function onButtonClick() {\n          setStatus(status === 'primary' ? 'error' : 'primary');\n        }\n\n        const color = status === 'primary' ? '#5352ED' : '#FF4757';\n        return <div>\n        <FuncCom onClick={onButtonClick} type={status} mdxType=\"FuncCom\">change Status</FuncCom>\n        <div style={{\n            backgroundColor: color\n          }} className=\"button-status\">\n          button status\n        </div>\n      </div>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}